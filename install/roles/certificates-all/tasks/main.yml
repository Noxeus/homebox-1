---

- name: Create a directory for certificates backup if it does not exists
  tags: cert
  delegate_to: localhost
  file:
    path: '{{ backup_directory }}/certificates/'
    state: directory
    mode: '0700'

# The "--ignore-existing" option skip the files already existing,
# especially the symbolic links in the live folder
# The '--update' option make sure to not overwrite new certificates.
- name: If the certificates have been generated before, copy them on the remote server
  when: (system.devel and devel.acme_server == 'staging') or system.keep_certs
  tags: cert,sync
  synchronize:
    src: '{{ backup_directory }}/certificates/'
    dest: /etc
    owner: no
    group: no
    perms: yes
    rsync_opts:
      - '--no-motd'
      - '--exclude=readme.md'
      - '--exclude=renewal-hooks'
      - '--ignore-existing'
      - '--update'
      - '--chmod=D0755,F0600'

- name: Open the port 80 if necessary
  tags: security, cert
  register: ufw_http
  ufw:
    proto: tcp
    rule: limit
    src: any
    port: 80
    comment: Allow LetsEncrypt temporarily

- name: Create all the certificates
  include_tasks: create-one.yml
  loop: '{{ certificates | selectattr("create", "equalto", true) | list }}'
  loop_control:
    loop_var: certificate

- name: Remove the firewall rule if it has been added
  tags: security, cert
  when: ufw_http.changed
  ufw:
    proto: tcp
    rule: limit
    src: any
    port: 80
    delete: yes
    comment: Allow LetsEncrypt temporarily

- name: Get the certificates list
  register: certs
  find:
    path: '/etc/letsencrypt/archive/'
    recurse: yes
    patterns: 'cert*,chain*,fullchain*'

- name: Get the keys list
  register: keys
  find:
    path: '/etc/letsencrypt/archive/'
    recurse: yes
    patterns: 'privkey*'

# The initial mode for the certificate is 0644, although the files should only
# readable by root. This tasks is running *before* any ACL applied by the role
# 'cert-perms', in the aim of granular access to certain daemon (LDAP at this time)
# Since the chmod command on linux resets ACLs already in place, we need to apply
# the change only onto files recently created, i.e. with a persmissions set to 0644
- name: Set the unix mode for the certificate files readable by root only
  tags: cert
  file:
    path: '{{ file.path }}'
    owner: root
    group: root
    mode: '0600'
  with_items:
    - '{{ certs.files | selectattr("mode", "eq", "0644") | list }}'
    - '{{ keys.files | selectattr("mode", "eq", "0644") | list }}'
  loop_control:
    loop_var: file

# In this direction, we should overwrite the symbolic links,
# in case the certificates have been renewed
# We force the permissions to 755 for dirs and 600 for files
- name: Backup the certificates on your local machine
  when: (system.devel and devel.acme_server == 'staging') or system.keep_certs
  tags: cert,sync
  synchronize:
    mode: pull
    src: /etc/letsencrypt
    dest: '{{ backup_directory }}/certificates/'
    perms: yes
    rsync_opts:
      - '--no-motd'
      - '--exclude=readme.md'
      - '--exclude=renewal-hooks'
      - '--update'
      - '--chmod=D0755,F0600'
