---

- name: Install required packages package
  tags: backup
  apt:
    name: '{{ pkgs }}'
    state: latest
  vars:
    pkgs:
      - borgbackup
      - python3-psutil

- name: Create the backup mount point
  tags: backup
  file:
    path: /mnt/backup
    state: directory

- name: Create the backup config into /etc/homebox
  tags: config
  ini_file:
    path: '/etc/homebox/backup.ini'
    section: 'alerts'
    option: '{{ option.name }}'
    value: '{{ option.value }}'
    mode: '0600'
  with_items:
    - name: from
      value: '{{ backup.alerts.from }}'
    - name: recipient
      value: '{{ backup.alerts.recipient }}'
    - name: jabber
      value: '{{ backup.alerts.jabber }}'
  loop_control:
    loop_var: option

- name: Configure each protocol
  include_tasks: 'install-protocol-{{ location.url | urlsplit("scheme") }}.yml'
  with_items:
    - '{{ backup.locations | default([]) }}'
  loop_control:
    loop_var: location

- name: Add the cron entries to backup the home directory
  tags: config
  template:
    src: cron-script.sh
    dest: '/etc/cron.{{ location.frequency | default("daily") }}/backup-{{ location.name }}'
    mode: '0700'
  with_items:
    - '{{ backup.locations | default([]) }}'
  loop_control:
    loop_var: location

- name: Create a random passphrase for encrypted backup
  tags: encryption
  set_fact:
    backup_key: '{{ lookup("password", "{{ encryption.backupKeyParams }}") }}'

- name: Save the passphrase
  tags: encryption
  template:
    src: backup-key
    dest: /etc/homebox/backup-key
    owner: root
    group: root
    mode: '0400'

- name: Copy the backup script
  tags: scripts
  copy:
    src: backup.py
    dest: '/usr/local/sbin/backup'
    mode: '0700'
