---

- name: Check if dovecot has been installed
  tags: apt, dovecot
  shell: dpkg -s '{{ pkg }}'
  with_items:
    - '{{ dovecot.packages }}'
  loop_control:
    loop_var: pkg

- name: Check if the dovecot service is up and running
  tags: systemctl, dovecot
  shell: systemctl status dovecot


- name: Check the certificate using IMAPS
  tags: systemctl, dovecot
  shell: >-
    echo QUIT | openssl s_client
    -servername imap.{{ network.domain }}
    -connect imap.{{ network.domain }}:993 2>&1
    | grep 'Verification: OK'

- name: Check the certificate using IMAP and STARTTLS
  tags: systemctl, dovecot
  shell: >-
    echo QUIT | openssl s_client
    -servername imap.{{ network.domain }}
    -connect imap.{{ network.domain }}:143
    -starttls imap 2>&1
    | grep 'Verification: OK'

- name: Check the certificate using ManageSieve
  tags: systemctl, dovecot
  shell: >-
    echo LOGOUT | openssl s_client
    -servername imap.{{ network.domain }}
    -connect imap.{{ network.domain }}:4190
    -starttls telnet 2>&1
    | grep 'Verification: OK'

- name: Test authentication on the first user
  tags: dovecot
  shell: >-
    doveadm auth login -- '{{ user0_uid }}' '{{ user0_password }}'

- name: Check the LDAP mapping from email address to uid
  tags: dovecot
  shell: >-
    doveadm -v user '{{ user.mail }}' | grep -E '^user\s+{{ user.uid }}$'
  become: yes
  become_method: sudo
  become_user: dovecot
  with_items:
    - '{{ users }}'
  loop_control:
    loop_var: user

- name: Check the LDAP mapping from uid to email address
  tags: dovecot
  shell: >-
    doveadm -v user '{{ user.uid }}' | grep -E '^mail\s+{{ user.mail }}$'
  become: yes
  become_method: sudo
  become_user: dovecot
  with_items:
    - '{{ users }}'
  loop_control:
    loop_var: user
